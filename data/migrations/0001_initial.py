# Generated by Django 4.0.1 on 2022-05-07 12:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FinvizDataFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creator', models.CharField(choices=[('Manual', 'Manual'), ('Automatic', 'Automatic')], default='Manual', max_length=20)),
                ('file', models.FileField(upload_to='finviz_data_files')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('data_date', models.DateField()),
                ('is_processed', models.BooleanField(default=False)),
                ('is_processing', models.BooleanField(default=False)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('errors', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Finviz data file',
                'verbose_name_plural': 'Finviz data files',
            },
        ),
        migrations.CreateModel(
            name='FinvizInsiderDataFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creator', models.CharField(choices=[('Manual', 'Manual'), ('Automatic', 'Automatic')], default='Manual', max_length=20)),
                ('file', models.FileField(upload_to='finviz_insider_data_files')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('data_date', models.DateField()),
                ('is_processed', models.BooleanField(default=False)),
                ('is_processing', models.BooleanField(default=False)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('errors', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Finviz insider data file',
                'verbose_name_plural': 'Finviz insider data files',
            },
        ),
        migrations.CreateModel(
            name='FinvizSectorDataFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creator', models.CharField(choices=[('Manual', 'Manual'), ('Automatic', 'Automatic')], default='Manual', max_length=20)),
                ('file', models.FileField(upload_to='finviz_sector_data_files')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('data_date', models.DateField()),
                ('is_processed', models.BooleanField(default=False)),
                ('is_processing', models.BooleanField(default=False)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('errors', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Finviz sector data file',
                'verbose_name_plural': 'Finviz sector data files',
            },
        ),
        migrations.CreateModel(
            name='IbdDataFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='ibd_data_files')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('data_date', models.DateField()),
                ('is_processed', models.BooleanField(default=False)),
                ('is_processing', models.BooleanField(default=False)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('errors', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'IBD data file',
                'verbose_name_plural': 'IBD data files',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
            },
        ),
        migrations.CreateModel(
            name='Symbol',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'Sybmol',
                'verbose_name_plural': 'Sybmols',
            },
        ),
        migrations.CreateModel(
            name='TimeframeAlias',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'Timeframe alias',
                'verbose_name_plural': 'Timeframe aliases',
            },
        ),
        migrations.CreateModel(
            name='Timeframe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('alias_id', models.ManyToManyField(related_name='timeframe_other_name', to='data.TimeframeAlias')),
            ],
            options={
                'verbose_name': 'Timeframe',
                'verbose_name_plural': 'Timeframes',
            },
        ),
        migrations.CreateModel(
            name='IbdData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('price', models.FloatField(blank=True, default=None, null=True)),
                ('price_change_in_currency', models.FloatField(blank=True, default=None, null=True)),
                ('price_change_in_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('comp_rating', models.FloatField(blank=True, default=None, null=True)),
                ('eps_rating', models.FloatField(blank=True, default=None, null=True)),
                ('industry_group_rank', models.FloatField(blank=True, default=None, null=True)),
                ('rs_rating', models.FloatField(blank=True, default=None, null=True)),
                ('ind_grp_rs', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('smr_rating', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('acc_dis_rating', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('spon_rating', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('vol_change_in_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('vol_change_in_1k_s', models.FloatField(blank=True, default=None, null=True)),
                ('company', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('sector', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('industry', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('market_cap', models.FloatField(blank=True, default=None, null=True)),
                ('pe', models.FloatField(blank=True, default=None, null=True)),
                ('forward_pe', models.FloatField(blank=True, default=None, null=True)),
                ('peg', models.FloatField(blank=True, default=None, null=True)),
                ('ps', models.FloatField(blank=True, default=None, null=True)),
                ('pb', models.FloatField(blank=True, default=None, null=True)),
                ('p_cash', models.FloatField(blank=True, default=None, null=True)),
                ('p_free_cash_flow', models.FloatField(blank=True, default=None, null=True)),
                ('dividend_yield_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('payout_ratio_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('eps_ttm', models.FloatField(blank=True, default=None, null=True)),
                ('eps_growth_this_year_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('eps_growth_next_year_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('eps_growth_past_5_years_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('eps_growth_next_5_years_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('sales_growth_past_5_years_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('eps_growth_quarter_over_quarter_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('sales_growth_quarter_over_quarter_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('shares_outstanding', models.FloatField(blank=True, default=None, null=True)),
                ('share_float', models.FloatField(blank=True, default=None, null=True)),
                ('insider_ownership_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('insider_transactions_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('institutional_ownership_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('institutional_transactions_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('float_short_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('short_ratio', models.FloatField(blank=True, default=None, null=True)),
                ('return_on_assets_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('return_on_equity_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('return_on_investment_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('current_ratio', models.FloatField(blank=True, default=None, null=True)),
                ('quick_ratio', models.FloatField(blank=True, default=None, null=True)),
                ('lt_debt_equity', models.FloatField(blank=True, default=None, null=True)),
                ('total_debt_equity', models.FloatField(blank=True, default=None, null=True)),
                ('gross_margin_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('operating_margin_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('profit_margin_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_week_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_month_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_quarter_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_half_year_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_year_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_ytd_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('beta', models.FloatField(blank=True, default=None, null=True)),
                ('average_true_range', models.FloatField(blank=True, default=None, null=True)),
                ('volatility_week_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('volatility_month_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('simple_moving_average_20_day_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('simple_moving_average_50_day_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('simple_moving_average_200_day_percentage', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('high_50_day_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('low_50_day_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('high_52_week_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('low_52_week_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('relative_strength_index_14', models.FloatField(blank=True, default=None, null=True)),
                ('change_from_open_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('gap_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('analyst_recom', models.FloatField(blank=True, default=None, null=True)),
                ('average_volume', models.FloatField(blank=True, default=None, null=True)),
                ('relative_volume', models.FloatField(blank=True, default=None, null=True)),
                ('finviz_price', models.FloatField(blank=True, default=None, null=True)),
                ('change_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('volume', models.FloatField(blank=True, default=None, null=True)),
                ('earnings_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('target_price', models.FloatField(blank=True, default=None, null=True)),
                ('ipo_date', models.DateField(blank=True, default=None, null=True)),
                ('after_hours_close', models.FloatField(blank=True, default=None, null=True)),
                ('after_hours_change_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ibd_data', to='data.symbol')),
            ],
            options={
                'verbose_name': 'Stock data',
                'verbose_name_plural': 'Stock data',
                'unique_together': {('date', 'symbol')},
            },
        ),
        migrations.CreateModel(
            name='FinvizSectorData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('market_cap', models.FloatField(blank=True, default=None, null=True)),
                ('pe', models.FloatField(blank=True, default=None, null=True)),
                ('forward_pe', models.FloatField(blank=True, default=None, null=True)),
                ('peg', models.FloatField(blank=True, default=None, null=True)),
                ('ps', models.FloatField(blank=True, default=None, null=True)),
                ('pb', models.FloatField(blank=True, default=None, null=True)),
                ('pc', models.FloatField(blank=True, default=None, null=True)),
                ('p_free_cash_flow', models.FloatField(blank=True, default=None, null=True)),
                ('dividend_yield_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('eps_growth_past_5_years_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('eps_growth_next_5_years_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('sales_growth_past_5_years_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('float_short_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_week_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_month_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_quarter_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_half_year_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_year_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('performance_year_to_date_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('analyst_recom', models.FloatField(blank=True, default=None, null=True)),
                ('average_volume', models.FloatField(blank=True, default=None, null=True)),
                ('relative_volume', models.FloatField(blank=True, default=None, null=True)),
                ('change_percentage', models.FloatField(blank=True, default=None, null=True)),
                ('volume', models.FloatField(blank=True, default=None, null=True)),
                ('stocks', models.FloatField(blank=True, default=None, null=True)),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finviz_sector_data', to='data.sector')),
            ],
            options={
                'verbose_name': 'Finviz sector data',
                'verbose_name_plural': 'Finviz sector data',
                'unique_together': {('date', 'sector')},
            },
        ),
        migrations.CreateModel(
            name='FinvizInsiderData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateField()),
                ('date', models.DateField()),
                ('owner', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('relationship', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('transaction', models.CharField(blank=True, choices=[('Buy', 'Buy'), ('Sale', 'Sale'), ('Option Exercise', 'Option Exercise')], default=None, max_length=200, null=True)),
                ('cost', models.FloatField(blank=True, default=None, null=True)),
                ('shares', models.FloatField(blank=True, default=None, null=True)),
                ('value', models.FloatField(blank=True, default=None, null=True)),
                ('shares_total', models.FloatField(blank=True, default=None, null=True)),
                ('sec_form_4', models.DateTimeField(blank=True, default=None, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finviz_insider_data', to='data.symbol')),
            ],
            options={
                'verbose_name': 'Finviz insider data',
                'verbose_name_plural': 'Finviz insider data',
                'unique_together': {('date', 'symbol', 'sec_form_4', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField()),
                ('open_bid', models.FloatField()),
                ('close_bid', models.FloatField()),
                ('high_bid', models.FloatField()),
                ('low_bid', models.FloatField()),
                ('open_ask', models.FloatField(blank=True, null=True)),
                ('close_ask', models.FloatField(blank=True, null=True)),
                ('high_ask', models.FloatField(blank=True, null=True)),
                ('low_ask', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_symbol', to='data.symbol')),
                ('timeframe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_timeframe', to='data.timeframe')),
            ],
            options={
                'verbose_name': 'Data',
                'verbose_name_plural': 'Data',
                'unique_together': {('datetime', 'timeframe', 'symbol')},
            },
        ),
    ]
